// **************************************************************
// Fuzzing example - buffer overflow in a simple file read mockup
//
// Copyright 2020
// Charley Lucas
// charley@zerosquared.io
// **************************************************************

#include <stdlib.h>
#include <string>
#include <cstring>
#include <iostream>
#include <fstream>
using namespace std;

#define BUFFER_SIZE 20

int main(int argc, char* argv[]) {
    ifstream inputfile;
    string line;
    int i = 0;

    char filename[BUFFER_SIZE];  // Allocate space for BUFFER_SIZE characters plus the null
    char username[BUFFER_SIZE];  // Allocate space for BUFFER_SIZE characters plus the null

    if (argc < 2) {
        cout << "Enter input filename on the command line.\n";
        exit(0);
    }

    cout << "Reading file " << argv[1] << endl << endl;

    inputfile.open(argv[1]);  // Not going to bother cleaning the input filename

    while (getline (inputfile, line)) {
        strcpy(username, line.c_str());  // Unprotected copy - may overwrite our allocated memory
        cout << i++ << ": " << username << endl;
    }
}